ll powmod (ll a, ll b, ll m) {
    ll res = 1;
    while (b > 0)
        if (b & 1) {
            res = (res * a) % m;
            --b;
        }
        else {
            a = (a * a) % m;
            b >>= 1;
        }
    return res % m;
}
// a^resp = b mod m | resp é o menor possível
ll disLog (ll a, ll b, ll m) {
    ll n = (ll) sqrt (m + .0) + 1;
    map<ll,ll> vals;
    for (ll i=n; i>=1; --i)
        vals[ powmod (a, i * n, m) ] = i;
    vector<ll> v;
    for (ll i=0; i<=n; ++i) {
        ll cur = (powmod (a, i, m) * b) % m;
        if (vals.count(cur)) {
            ll ans = vals[cur] * n - i;
            if (ans < m)v.pb(ans);
        }
    }
    sort(v.begin(), v.end());
    if(v.size() > 0) return v[0];
    else return -1;
}
