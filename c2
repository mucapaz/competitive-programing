#include <bits/stdc++.h> 
#include <bitset> 
using namespace std;
// priority_queue< ii, vector<ii>, greater<ii> > pq;  pq.push pq.pop pq.top;
// priority_queue por default ordena decrescente
 
#define INF 0x3f3f3f3f
#define LINF 0x3f3f3f3f3f3f3f3fLL
#define NVI -1
#define db if(0)
#define pb push_back
#define EPS 1e-9
#define fst first
#define scd second
#define mp make_pair
 
typedef unsigned long long ull;
typedef long long ll;
typedef vector <int> vi;
typedef vector<vector<int > > vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef vector<vector<pair<int, int> > > ve;
typedef pair<double,double> dd;
// uva 11832
int in[45];
vector<pair <string,int> > v[2];
vector<string> resp;
map<int,vector<string > > mapa; 
int n,f,end, tipo;	
void gen(int at, string s){
	if(at == end){
		int eva = 0;
		if(tipo == 0){
			for(int x=0;x<end;x++){
				if(s[x] == '+')eva += in[x];
				else eva-=in[x];
			}
			
			v[0].pb(mp(s,eva));
		}
		else {
			for(int x=n/2;x<end;x++){
				if(s[x -n/2] == '+')eva += in[x];
				else eva-=in[x];
			}
			//cout<<eva <<" " <<s<<"\n";
			mapa[eva].pb(s);
			//v[1].pb(mp(s,eva));
		}
	}else{
		gen(at+1, s + "+");
		gen(at+1, s + "-");
	}	
}	

	
int main(void){

	while(scanf("%d%d",&n,&f) && (n||f)){
		
		for(int x=0;x<n;x++){
			scanf("%d",&in[x]);
		}
	
		resp.clear();mapa.clear();
		v[0].clear();v[1].clear();
		end = n/2;
		tipo = 0;	
		gen(0,"");
		end = n;
		tipo = 1;
		gen(n/2,"");	
		/*
		//for(int x=0;x<v.size();x++)cout<<v[x]<<"\n";
		/*
			f = v[0].scd + k
		*/
		vector<string> vai;
		for(int x=0;x<v[0].size();x++){
			vai = mapa[f -  v[0][x].scd];
			for(int y=0;y<vai.size();y++){
				resp.pb(v[0][x].fst + vai[y]);			
			}	
		}
		
		if(resp.size() == 0){
			cout<<"*\n";
		}else{
			char ar[50];
			memset(ar,0,sizeof ar);
			
			for(int x=0;x<resp.size();x++){
				for(int y=0;y<resp[x].size();y++){
					if(ar[y] == 0)ar[y] = resp[x][y];
					else if(ar[y] == '?') ar[y] = '?';
					else if(ar[y] != resp[x][y]) ar[y] = '?';
				}
			}
			
			for(int x=0;x<n;x++){
				printf("%c",ar[x]);
			}printf("\n");
		
		}
		
		
	}
	
    return 0;
}












